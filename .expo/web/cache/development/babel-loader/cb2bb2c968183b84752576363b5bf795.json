{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/noomanmuhammad/source/nmuhamm1_4661/KabobHouse/src/screens/HomeScreen.js\";\n\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport BottomNav from \"../components/BottomNav\";\nimport ImageDetail from \"../components/ImageDetail\";\nimport { SliderBox } from \"react-native-image-slider-box\";\nimport { useContext } from \"../context/PlatesContext\";\nimport { render } from \"react-dom\";\n\nvar HomeScreen = function HomeScreen(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      active = _useState2[0],\n      setState = _useState2[1];\n\n  var change = function change(_ref) {\n    var nativeEvent = _ref.nativeEvent;\n    var slide = Math.ceil(nativeEvent.contentOffset.x / nativeEvent.layoutMeasurement.width);\n\n    if (slide !== active) {\n      setState(slide);\n    }\n  };\n\n  var _Dimensions$get = Dimensions.get(\"window\"),\n      width = _Dimensions$get.width;\n\n  var height = width * .7;\n  var images = [require(\"../../assets/Chickenshawplate.jpg\"), require(\"../../assets/beefshawplate.jpg\"), require(\"../../assets/Hummus.jpg\"), require(\"../../assets/lambkabob.jpg\"), require(\"../../assets/chickentekka.jpg\")];\n  return React.createElement(View, {\n    style: styles.backGround,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }\n  }, React.createElement(View, {\n    style: styles.container1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.logostyle,\n    source: require(\"../../assets/KabobHouseLogo.gif\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  })), React.createElement(View, {\n    style: {\n      width: width,\n      height: height\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    pagingEnabled: true,\n    horizontal: true,\n    onScroll: change,\n    showsHorizontalScrollIndicator: false,\n    style: {\n      width: width,\n      height: height\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, images.map(function (image, index) {\n    return React.createElement(Image, {\n      key: index,\n      source: image,\n      style: {\n        width: width,\n        height: height,\n        resizeMode: 'cover'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    });\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      position: \"absolute\",\n      bottom: 0,\n      alignSelf: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, images.map(function (i, k) {\n    return React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontSize: 25\n      },\n      key: k,\n      style: k == active ? styles.pagingActiveText : styles.pagingText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"\\u25C6\");\n  }))), React.createElement(TouchableOpacity, {\n    style: styles.container,\n    onPress: function onPress() {\n      props.navigation.navigate(\"Menu\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"FULL MENU \")));\n};\n\nvar styles = StyleSheet.create({\n  backGround: {\n    backgroundColor: '#ffffff'\n  },\n  pagingText: {\n    color: '#888',\n    margin: 3,\n    fontSize: 25\n  },\n  pagingActiveText: {\n    color: '#fff',\n    margin: 3,\n    fontSize: 25\n  },\n  container1: {\n    alignItems: \"center\"\n  },\n  logostyle: {\n    width: 250,\n    height: 250\n  },\n  text: {\n    fontSize: 30,\n    textAlign: 'center',\n    color: '#fff',\n    textShadowColor: '#fff',\n    textShadowRadius: 20\n  },\n  container: {\n    backgroundColor: '#b12135',\n    margin: 5,\n    borderRadius: 5,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["/Users/noomanmuhammad/source/nmuhamm1_4661/KabobHouse/src/screens/HomeScreen.js"],"names":["React","useState","BottomNav","ImageDetail","SliderBox","useContext","render","HomeScreen","props","active","setState","change","nativeEvent","slide","Math","ceil","contentOffset","x","layoutMeasurement","width","Dimensions","get","height","images","require","styles","backGround","container1","logostyle","map","image","index","resizeMode","flexDirection","position","bottom","alignSelf","i","k","color","fontSize","pagingActiveText","pagingText","container","navigation","navigate","text","StyleSheet","create","backgroundColor","margin","alignItems","textAlign","textShadowColor","textShadowRadius","borderRadius","justifyContent"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { Text, StyleSheet, View, Button, TouchableOpacity, Image, ScrollView, Dimensions } from \"react-native\";\nimport BottomNav from \"../components/BottomNav\";\nimport ImageDetail from \"../components/ImageDetail\";\nimport { SliderBox } from \"react-native-image-slider-box\";\nimport { useContext } from \"../context/PlatesContext\";\nimport { render } from \"react-dom\";\n\n\nconst HomeScreen = (props) => {\n  const [active, setState] = useState(0);\n  const change =({nativeEvent}) => {\n    const slide = Math.ceil(nativeEvent.contentOffset.x / nativeEvent.layoutMeasurement.width);\n    if(slide !== active){\n      setState(slide);\n    }\n  }\n  const { width } = Dimensions.get(\"window\");\n  const height = width*.7; //60%\n  const images = [\n    require('../../assets/Chickenshawplate.jpg'),\n    require('../../assets/beefshawplate.jpg'),\n    require('../../assets/Hummus.jpg'),\n    require('../../assets/lambkabob.jpg'),\n    require('../../assets/chickentekka.jpg'),\n  ]\n  return <View style={styles.backGround}>\n    <View style={styles.container1}>\n      <Image style={styles.logostyle} source={require('../../assets/KabobHouseLogo.gif')} />\n    </View>\n      <View style={{ width, height}}>\n        <ScrollView \n          pagingEnabled \n          horizontal \n          onScroll={change}\n          showsHorizontalScrollIndicator={false}\n          style={{width, height}}>\n          {\n            images.map((image, index) => (\n              <Image \n                key={index}\n                source={image}\n                style={{width, height, resizeMode: 'cover'}}/>\n            ))\n          }\n          </ScrollView>\n        \n      <View style={{flexDirection:'row', position:\"absolute\", bottom:0,alignSelf:\"center\"}}>\n        {images.map((i, k) => (\n          <Text style={{color: 'white', fontSize:25}} key={k} style={k==active ? styles.pagingActiveText : styles.pagingText}>◆</Text>\n        ))\n        }\n        \n      </View>\n      </View>\n    {/* <View style={styles.container1}>\n      <Image source={require('../../assets/KabobHouseLogo.gif')} style={{width:300, height:300}}/>\n    </View> */}\n\n    <TouchableOpacity style={styles.container} onPress={() => { props.navigation.navigate(\"Menu\") }}>\n      <Text style={styles.text}>FULL MENU </Text>\n    </TouchableOpacity>\n\n  </View>\n};\n\nconst styles = StyleSheet.create({\n  backGround: {\n    backgroundColor: '#ffffff',\n  },\n  pagingText:{\n    color: '#888',\n    margin: 3,\n    fontSize: 25\n  },\n  pagingActiveText:{\n    color: '#fff',\n    margin:3,\n    fontSize: 25\n  },\n\n  container1: {\n\n    alignItems: \"center\"\n  },\n  logostyle: {\n    width: 250,\n    height: 250\n  },\n  \n  text: {\n    fontSize: 30,\n    textAlign: 'center',\n    color: '#fff',\n    textShadowColor: '#fff',\n    textShadowRadius: 20\n  },\n\n  container: {\n    backgroundColor: '#b12135',\n    margin: 5,\n    borderRadius:5,\n    justifyContent: 'center',\n    alignItems: 'center',\n\n  },\n});\n\nexport default HomeScreen;"]},"metadata":{},"sourceType":"module"}