{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport React, { useReducer, useState } from \"react\";\nimport createDataContext from \"./createDataContext\";\n\nvar cartReducer = function cartReducer(state, action) {\n  switch (action.type) {\n    case 'add_cartitem':\n      return [].concat(_toConsumableArray(state), [{\n        id: Math.floor(Math.random() * 9999999),\n        title: action.payload.title,\n        price: action.payload.price\n      }]);\n\n    case 'get_carttotal':\n      return {\n        cartTotal: cartTotal\n      };\n\n    case 'delete_cartitem':\n      return state.filter(function (cartItem) {\n        return cartItem.id !== action.payload;\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar addCartItem = function addCartItem(dispatch) {\n  return function (title, price) {\n    dispatch({\n      type: 'add_cartitem',\n      payload: {\n        title: title,\n        price: price\n      }\n    });\n  };\n};\n\nvar getCartTotal = function getCartTotal(dispatch) {\n  return function (cartTotal) {\n    dispatch({\n      type: 'get_carttotal',\n      payload: {\n        cartTotal: cartTotal\n      }\n    });\n  };\n};\n\nvar deleteCartItem = function deleteCartItem(dispatch) {\n  return function (id) {\n    dispatch({\n      type: 'delete_cartitem',\n      payload: id\n    });\n  };\n};\n\nvar _createDataContext = createDataContext(cartReducer, {\n  addCartItem: addCartItem,\n  deleteCartItem: deleteCartItem,\n  getCartTotal: getCartTotal\n}, []),\n    Context = _createDataContext.Context,\n    Provider = _createDataContext.Provider;\n\nexport { Context, Provider };","map":{"version":3,"sources":["/Users/noomanmuhammad/source/nmuhamm1_4661/KabobHouse/src/context/CartContext.js"],"names":["React","useReducer","useState","createDataContext","cartReducer","state","action","type","id","Math","floor","random","title","payload","price","cartTotal","filter","cartItem","addCartItem","dispatch","getCartTotal","deleteCartItem","Context","Provider"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,iBAAP;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACnC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,cAAL;AACI,0CAAWF,KAAX,IAAkB;AACdG,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,OAAzB,CADU;AAEdC,QAAAA,KAAK,EAAEN,MAAM,CAACO,OAAP,CAAeD,KAFR;AAGdE,QAAAA,KAAK,EAAER,MAAM,CAACO,OAAP,CAAeC;AAHR,OAAlB;;AAOJ,SAAK,eAAL;AAEI,aAAO;AAACC,QAAAA,SAAS,EAATA;AAAD,OAAP;;AACJ,SAAK,iBAAL;AACI,aAAOV,KAAK,CAACW,MAAN,CAAa,UAACC,QAAD,EAAc;AAC9B,eAAOA,QAAQ,CAACT,EAAT,KAAgBF,MAAM,CAACO,OAA9B;AACH,OAFM,CAAP;;AAGJ;AACI,aAAOR,KAAP;AAjBR;AAoBH,CArBD;;AA2BA,IAAMa,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;AAC9B,SAAM,UAACP,KAAD,EAASE,KAAT,EAAmB;AACrBK,IAAAA,QAAQ,CAAC;AACLZ,MAAAA,IAAI,EAAE,cADD;AAELM,MAAAA,OAAO,EAAE;AAACD,QAAAA,KAAK,EAACA,KAAP;AAAcE,QAAAA,KAAK,EAACA;AAApB;AAFJ,KAAD,CAAR;AAIH,GALD;AAOH,CARD;;AASA,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAACD,QAAD,EAAc;AAC/B,SAAM,UAACJ,SAAD,EAAe;AACjBI,IAAAA,QAAQ,CAAC;AACLZ,MAAAA,IAAI,EAAE,eADD;AAELM,MAAAA,OAAO,EAAE;AAACE,QAAAA,SAAS,EAACA;AAAX;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH,CAPD;;AAQI,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACF,QAAD,EAAc;AACjC,SAAM,UAACX,EAAD,EAAQ;AACVW,IAAAA,QAAQ,CAAC;AAACZ,MAAAA,IAAI,EAAE,iBAAP;AAA0BM,MAAAA,OAAO,EAAEL;AAAnC,KAAD,CAAR;AACH,GAFD;AAGH,CAJD;;AAMG,yBAA4BL,iBAAiB,CAACC,WAAD,EAAc;AAACc,EAAAA,WAAW,EAACA,WAAb;AAA0BG,EAAAA,cAAc,EAAEA,cAA1C;AAA0DD,EAAAA,YAAY,EAAEA;AAAxE,CAAd,EAAsG,EAAtG,CAA7C;AAAA,IAAOE,OAAP,sBAAOA,OAAP;AAAA,IAAgBC,QAAhB,sBAAgBA,QAAhB","sourcesContent":["import React, {useReducer, useState} from \"react\";\nimport createDataContext from \"./createDataContext\";\n\n\nconst cartReducer = (state, action) => {\n    switch(action.type) {\n        case 'add_cartitem':\n            return [...state, {\n                id: Math.floor(Math.random()*9999999), \n                title: action.payload.title, \n                price: action.payload.price,\n                //cartTotal: cartTotal + action.payload.price\n                \n            }]\n        case 'get_carttotal':\n            \n            return {cartTotal}; \n        case 'delete_cartitem':\n            return state.filter((cartItem) => {\n                return cartItem.id !== action.payload\n            });\n        default:\n            return state;\n    }\n\n}\n\n\n//TODO1: Get cartContext \n//Go through loop of the cart and find total\n\nconst addCartItem = (dispatch) => {\n    return(title,  price) => {\n        dispatch({\n            type: 'add_cartitem', \n            payload: {title:title, price:price}\n        });\n    }\n    \n}\nconst getCartTotal = (dispatch) => {\n    return(cartTotal) => {\n        dispatch({\n            type: 'get_carttotal',\n            payload: {cartTotal:cartTotal}\n        })\n    }\n}\n    const deleteCartItem = (dispatch) => {\n        return(id) => {\n            dispatch({type: 'delete_cartitem', payload: id});\n        }\n    }\n\nexport const {Context, Provider} = createDataContext(cartReducer, {addCartItem:addCartItem, deleteCartItem: deleteCartItem, getCartTotal: getCartTotal},  []);\n"]},"metadata":{},"sourceType":"module"}